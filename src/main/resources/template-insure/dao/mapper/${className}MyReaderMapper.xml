<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>
<#assign className = table.className>
<#assign classNameLower = className?uncap_first>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>
<mapper namespace="${basepackage}.dao.${className}ReaderDao">

	<resultMap id="BaseResultMap" type="${basepackage}.po.${className}">
		<#list table.columns as column>
			<#if column.sqlName == "id">
				<id column="id" jdbcType="BIGINT" property="id" />
			<#else>
				<result column="${column.sqlName}" jdbcType="${column.jdbcType}" property="${column.columnNameFirstLower}" />
			</#if>
		</#list>
	</resultMap>

	<sql id="Base_Column_List">
		<#list table.columns as column>
			${column.sqlName}<#if column_has_next>,</#if>
		</#list>
	</sql>

	<sql id="condition_sql">
		<#list table.columns as column>
		<#if column.isStringColumn>
		<if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} !=''  ">
			AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower+",jdbcType=${column.jdbcType}" />
		</if>
		</#if>
		<#if !column.isStringColumn>
		<if test="${column.columnNameFirstLower} != null">
			AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower +",jdbcType=${column.jdbcType}" />
		</if>
		</#if>
		</#list>
	</sql>

	<sql id="condition_sql_like">
		<#list table.columns as column>
		<#if column.isStringColumn>
		<if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} !=''  ">
			AND ${column.sqlName} like CONCAT('%', <@mapperEl column.columnNameFirstLower +",jdbcType=${column.jdbcType}"/> ,'%')
		</if>
		</#if>
		<#if !column.isStringColumn>
		<if test="${column.columnNameFirstLower} != null">
			AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower +",jdbcType=${column.jdbcType}" />
		</if>
		</#if>
		</#list>
	</sql>

	<select id="selectByPrimaryKey" parameterType="long" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List"/>
		from
			${table.sqlName}
		where id = <@mapperEl "id,jdbcType=BIGINT"/>
	</select>

	<select id="listPage" parameterType="${basepackage}.vo.${className}PagingQueryVo" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from
		${table.sqlName}
		<where>
			<include refid="condition_sql_like" />
		</where>
      <![CDATA[ order by create_time desc ]]>
		limit <@mapperEl "startIndex"/>,<@mapperEl "pageSize"/>
	</select>

	<select id="listPageCount" parameterType="${basepackage}.vo.${className}PagingQueryVo"
		resultType="long">
		select count(1) from
		${table.sqlName}
		<where>
			<include refid="condition_sql_like" />
		</where>
	</select>

	<select id="get${className}s" parameterType="${basepackage}.vo.${className}Vo"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		${table.sqlName}
		<where>
			<include refid="condition_sql_like" />
		</where>
      <![CDATA[ order by create_time desc]]>
	</select>

	<select id="get${className}By" parameterType="${basepackage}.vo.${className}Vo"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		${table.sqlName}
		<where>
			<include refid="condition_sql_like" />
		</where>
	</select>
</mapper>

